■■■ GET 방식과 POST 방식 ■■■

○ GET 방식

   ex)https://n.news.naver.com/article/005/0001518197?cds=news_media_pc
	
	가. https://n.news.naver.com/article/005/0001518197 ? → 요청 페이지
	나. cds=news_media_pc (『&』 있을 수도 있고 없을수도) → 전송 데이터

   - GET 방식은 엽서를 보내는 방식가 유사한 전송 / 요청 방식
   - 주소 + 데이터(모두 노출)
   - 전송할 데이털르 문자열 형태(Query String)로 URL 뒤에 인수로 붙여서
     전송을 수행하는 방법(방식)이다.
   - URL 뒤에 인수로 붙어있는 내용을 누구나 볼 수 있고
     이로 인해 보안성이 취약하다고 할 수 있다.
   - 또한, GET 방식은 보낼 수 있는 데이터 량의 한계가 있기 때문에(과거)
     많은 데이터를 보내는 경우 일정 크기 이상에서는 잘림 현상이 발생한다.
     (길이 제한을 가진다는 의미이다. URL 최대 길이 2048char)
   - 특히나 <form> 태그에서의 GET 방식은
     서버로 데이터를 전송하는 과정에서 서버 처리가 지연될 경우
     중복해서 요청이 이루어진다는 문제가 발생할 수 있다는 단점을 가지고 있다.
   - 형식 및 구조
     『URL주소?속성=데이터&속성=데이터&....』
     『URL주소?name=value&tel=value2&...』
   - GET 방식은 select 적인 성격(성향)을 가지고 있다.
     서버에서 데이터를 가지고 와서 보여준다거나 하는 용도로 주로 사용한다.
     서버의 값이나 상태를 바꾸는 용도로는 사용하지 않는다.
     즉, 단순 페이지 요청에 많이 사용된다는 것이다.
   - GET 방식의 장점은 여러가지 형태를 통해 간편한 데이터 전송이 가능하다는 것이다.
     POST 방식처럼 form 태그를 사용하여 전송도 하고,
     링크에 직접 걸어 사용해도 되고, 주소창에 직접 입력해도 된다.
     ex)
     <a href="http://url?키=값&키=값">
     <form action="http://url?키=값&키=값">
     window.open(href="http://url?키=값&키=값");
     window.location.href="http://url?키=값&키=값";
     window.location.replace("http://url?키=값&키=값");



○ POST 방식